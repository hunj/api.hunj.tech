services:
  api:
    build: .
    working_dir: /api/
    command: /bin/bash /api/bin/boot.sh
    restart: always
    volumes:
      - ./api:/api
      - static_volume:/api/staticfiles
      - image_volume:/api/img
      - ~/upload_photos:/media
    expose:
      - 8001  # <= nginx:8080
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - hunjNet

  db:
    image: postgres:15
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./db.env
    ports:
     - 5432:5432
    healthcheck:
      test: pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - hunjNet

  nginx:
    build: ./nginx
    restart: always
    ports:
      - 80:8080  # => api:8001
    depends_on:
      - api
    volumes:
      - static_volume:/staticfiles
      - ~/upload_photos:/media
      - image_volume:/img
    networks:
      - hunjNet

  redis:
    image: redis:latest
    restart: always
    expose:
      - 6379
    command: /bin/sh -c "redis-server --requirepass $$REDIS_HOST_PASSWORD"
    env_file:
      - redis.env
    volumes:
      - redis_data:/data
    networks:
      - hunjNet

volumes:
  postgres_data:
  redis_data:
  static_volume:
  image_volume:

networks:
  hunjNet:
    driver: bridge
    name: hunjnetwork
    external: true
